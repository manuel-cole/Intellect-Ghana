// Generated by CoffeeScript 1.7.1
var __hasProp = {}.hasOwnProperty;

define(['external/underscore', 'modules/clean/ajax'], function($u, ajax) {
  var add_static_urls, clear_static_urls, multifetch_static_urls, static_url, static_url_cache;
  static_url_cache = {};
  clear_static_urls = function() {
    var k, _results;
    _results = [];
    for (k in static_url_cache) {
      if (!__hasProp.call(static_url_cache, k)) continue;
      _results.push(delete static_url_cache[k]);
    }
    return _results;
  };
  add_static_urls = function(path_to_static_urls) {
    var path, static_url;
    for (path in path_to_static_urls) {
      if (!__hasProp.call(path_to_static_urls, path)) continue;
      static_url = path_to_static_urls[path];
      static_url_cache[path] = static_url;
    }
    return path_to_static_urls;
  };
  multifetch_static_urls = function(paths, callback) {
    var path, pathsToFetch;
    if (callback == null) {
      callback = null;
    }
    pathsToFetch = (function() {
      var _i, _len, _results;
      _results = [];
      for (_i = 0, _len = paths.length; _i < _len; _i++) {
        path = paths[_i];
        if (!(path in static_url_cache)) {
          _results.push(path);
        }
      }
      return _results;
    })();
    if (pathsToFetch.length > 0) {
      return ajax.BackgroundRequest({
        url: '/web_ajax/static_urls',
        data: {
          paths: JSON.stringify(pathsToFetch)
        },
        type: 'POST',
        success: function(data, status, xhr) {
          if (xhr.responseText.length) {
            add_static_urls(JSON.parse(xhr.responseText));
            return typeof callback === "function" ? callback($u.object((function() {
              var _i, _len, _results;
              _results = [];
              for (_i = 0, _len = paths.length; _i < _len; _i++) {
                path = paths[_i];
                _results.push([path, static_url_cache[path]]);
              }
              return _results;
            })())) : void 0;
          }
        }
      });
    } else {
      return typeof callback === "function" ? callback($u.object((function() {
        var _i, _len, _results;
        _results = [];
        for (_i = 0, _len = paths.length; _i < _len; _i++) {
          path = paths[_i];
          _results.push([path, static_url_cache[path]]);
        }
        return _results;
      })())) : void 0;
    }
  };
  static_url = function(path) {
    return static_url_cache[path];
  };
  return {
    add_static_urls: add_static_urls,
    clear_static_urls: clear_static_urls,
    multifetch_static_urls: multifetch_static_urls,
    static_url: static_url
  };
});

//# sourceMappingURL=deprecated_static_urls.map
